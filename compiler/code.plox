//fun a()
//{   
//    var local=1;
//    print "a";
//    print local;
//    b();
//}
//fun b() 
//{   
//    var local=2;
//    print "b";
//    print local;
//    c();
//}
//fun c()
//{   
//    var local=3;
//    print "c";
//    print local;
//}
//print a();
//fun fib(n) 
//{
// if (n < 2) return n;
// return fib(n - 2) + fib(n - 1);
//}
//var start=clock();
//var res=fib(15);
//var end=clock();
//print res;
//print end-start;
//var x = "global";
//fun outer() {
// var x = "outside";
// fun inner() {
// print x;
// }
// return inner; }
//var closure = outer();
//closure();

//class Brioche {}
//print Brioche;
//print Brioche();
//class Toast {}
//var toast = Toast();
//print toast;
//toast.jam = "grape"; // Prints "grape"
//print toast.jam;
//
//class Pair {}
//var pair = Pair();
//pair.first = 1;
//pair.second = 2;
//print pair.first + pair.second;
//class Scone {
//topping(first, second) {
//print "scone with " + first + " and " + second;
//}
//}
//var scone = Scone();
//scone.topping("berries", "cream");
//
//
//class Nested {
// method() {
// fun function() {
// print this;
// }
// function();
// }
//}
// Nested().method();


class Brunch {
  init(a,b) {
    this.egg=a;
    print(this.egg);
 }
}
var brunch=Brunch("good egg","offi");
print brunch;

class CoffeeMaker {
 init(coffee) {
 this.coffee = coffee;
 }
 brew() {
 print "Enjoy your cup of " + this.coffee;
 // No reusing the grounds!
 this.coffee = nil;
 }
}
var maker = CoffeeMaker("coffee and chicory");
maker.brew();

class Doughnut {
 cook() {
 print "Dunk in the fryer.";
 this.finish("sprinkles");
 }
 finish(ingredient) {
 print "Finish with " + ingredient;
 }
}

class Cruller < Doughnut {
 finish(ingredient) {
 // No sprinkles, always icing.
 super.finish("icing");
 }
}

var cruller=Cruller();
cruller.finish("puke");
